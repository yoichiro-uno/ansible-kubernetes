---
- name: add group "docker"
  group: 
    name: docker

- name: add user "docker"
  user: 
    name: docker
    group: docker
    home: "/home/docker"

- name: Set kubelet service to start on boot.
  systemd: 
    name: kubelet
    state: started
    enabled: yes

- name: Check if K8s-master is running
  stat:
    path: /etc/kubernetes/admin.conf
  register: _conffile_stat


- name: Init k8s-master
  shell: /bin/bash -lc "kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ ansible_default_ipv4.address }}"
  register: _result_init_k8s
  when: not _conffile_stat.stat.exists

- name: Make .kube Directory
  file:
    path: /home/docker/.kube
    state: directory
    owner: docker
    group: docker
    mode: 0755

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/docker/.kube/config
    owner: docker
    group: docker
    remote_src: yes
    mode: 0600

- name: Set KUBECONFIG env
  template:
    src: kubernetes.sh.j2
    dest: /etc/profile.d/kubernetes.sh
    mode: 0644

#- name: Export Kubernetes
#  lineinfile:
#    path: /home/docker/.kube/config
#    state: absent
#    regexp: '^%KUBECONFIG'

- name: Create flannel Network
#  become: yes
#  become_user: docker
  shell: /bin/bash -lc "cd /home/docker;kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml |sed 's/amd64/arm/g'"
#  shell: /bin/bash -lc "cd /home/docker;kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  register: _result_apply_flannel


- name: restart kubelet
  systemd:
    name: kubelet
    state: restarted 